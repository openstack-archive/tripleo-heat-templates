heat_template_version: rocky

description: >
  OpenStack Neutron base service. Shared for all Neutron agents.

parameters:
  DatabaseSyncTimeout:
    default: 300
    description: DB Sync Timeout default
    type: number
  NeutronDhcpAgentsPerNetwork:
    type: number
    default: 0
    description: The number of neutron dhcp agents to schedule per network
  DhcpAgentNotification:
    default: true
    description: Whether or not to enable DHCP agent notifications.
    type: boolean
  NeutronDnsDomain:
    type: string
    default: openstacklocal
    description: Domain to use for building the hostnames.
  NeutronCorePlugin:
    default: 'ml2'
    description: |
        The core plugin for Neutron. The value should be the entrypoint to be loaded
        from neutron.core_plugins namespace.
    type: string
  NeutronServicePlugins:
    default: "qos,ovn-router,trunk,segments"
    description: |
        Comma-separated list of service plugin entrypoints to be loaded from the
        neutron.service_plugins namespace.
    type: comma_delimited_list
  Debug:
    type: boolean
    default: false
    description: Set to True to enable debugging on all services.
  NeutronDebug:
    default: ''
    description: Set to True to enable debugging Neutron services.
    type: string
    constraints:
      - allowed_values: [ '', 'true', 'True', 'TRUE', 'false', 'False', 'FALSE']
  EnableConfigPurge:
    type: boolean
    default: false
    description: >
        Remove configuration that is not generated by TripleO. Used to avoid
        configuration remnants after upgrades.
  NeutronGlobalPhysnetMtu:
    type: number
    default: 0
    description: |
        MTU of the underlying physical network. Neutron uses this value to
        calculate MTU for all virtual network components. For flat and VLAN
        networks, neutron uses this value without modification. For overlay
        networks such as VXLAN, neutron automatically subtracts the overlay
        protocol overhead from this value.
        (If this is not changed TenantNetPhysnetMtu will be used.)
  TenantNetPhysnetMtu:
    type: number
    default: 1500
    description: |
        MTU of the underlying physical network. Neutron uses this value to
        calculate MTU for all virtual network components. For flat and VLAN
        networks, neutron uses this value without modification. For overlay
        networks such as VXLAN, neutron automatically subtracts the overlay
        protocol overhead from this value.
        (The mtu setting of the Tenant network in network_data.yaml
        control's this parameter.)
  NeutronDBSyncExtraParams:
    default: ''
    description: |
        String of extra command line parameters to append to the neutron-db-manage
        upgrade head command.
    type: string
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  NotificationDriver:
    type: string
    default: 'noop'
    description: Driver or drivers to handle sending notifications.
  EnableVLANTransparency:
    default: false
    description: >
        If True, then allow plugins that support it to create VLAN
        transparent networks.
    type: boolean
  NeutronGlobalReportInterval:
    default: 300
    description: >
      Seconds between nodes reporting state to server; should be less than
      NeutronAgentDownTime, best if it is half or less than NeutronAgentDownTime.
    type: number

conditions:
  dhcp_agents_zero: {equals : [{get_param: NeutronDhcpAgentsPerNetwork}, 0]}
  service_debug_unset: {equals : [{get_param: NeutronDebug}, '']}
  global_physnet_mtu_unset: {equals: [{get_param: NeutronGlobalPhysnetMtu}, 0]}

outputs:
  role_data:
    description: Role data for the Neutron base service.
    value:
      service_name: neutron_base
      config_settings:
        map_merge:
          - neutron::notification_driver: {get_param: NotificationDriver}
            neutron::core_plugin: {get_param: NeutronCorePlugin}
            neutron::service_plugins: {get_param: NeutronServicePlugins}
            neutron::report_interval: {get_param: NeutronGlobalReportInterval}
            neutron::logging::debug:
              if:
              - service_debug_unset
              - {get_param: Debug }
              - {get_param: NeutronDebug }
            neutron::purge_config: {get_param: EnableConfigPurge}
            neutron::allow_overlapping_ips: true
            neutron::dhcp_agent_notification: {get_param: DhcpAgentNotification}
            neutron::dns_domain: {get_param: NeutronDnsDomain}
            neutron::rabbit_heartbeat_timeout_threshold: 60
            neutron::host: "%{hiera('fqdn_canonical')}"
            neutron::db::database_db_max_retries: -1
            neutron::db::database_max_retries: -1
            neutron::db::sync::db_sync_timeout: {get_param: DatabaseSyncTimeout}
            neutron::global_physnet_mtu:
              if:
              - global_physnet_mtu_unset
              - {get_param: TenantNetPhysnetMtu}
              - {get_param: NeutronGlobalPhysnetMtu}
            neutron::db::sync::extra_params: {get_param: NeutronDBSyncExtraParams}
            neutron::vlan_transparent: {get_param: EnableVLANTransparency}
          - if:
            - dhcp_agents_zero
            - {}
            - tripleo::profile::base::neutron::dhcp_agents_per_network: {get_param: NeutronDhcpAgentsPerNetwork}
