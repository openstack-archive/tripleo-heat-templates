heat_template_version: wallaby

description: >
  OpenStack containerized HAproxy service for DCN/Edge deployments

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry. Use
                 parameter_merge_strategies to merge it with the defaults.
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  EnableGlanceApiProxy:
    default: true
    description: Configure haproxy to forward glance-api requests to glance-api
                 services running at the edge site.
    type: boolean
  EnableInternalTLS:
    type: boolean
    default: false

resources:
  HAProxyBase:
    type: ./haproxy-container-puppet.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      EnableInternalTLS: {get_param: EnableInternalTLS}

outputs:
  glance_api_edge_uri:
    description: URI of the glance-api service running at the edge site.
    value: &glance_api_edge_uri
      if:
      - {get_param: EnableInternalTLS}
      - str_replace:
          template:
            "https://%{lookup('fqdn_NETWORK')}:PORT"
          params:
            NETWORK: {get_param: [ServiceNetMap, GlanceApiEdgeNetwork]}
            PORT: {get_param: [EndpointMap, GlanceInternal, port]}
      - str_replace:
          template:
            "http://%{lookup('NETWORK_uri')}:PORT"
          params:
            NETWORK: {get_param: [ServiceNetMap, GlanceApiEdgeNetwork]}
            PORT: {get_param: [EndpointMap, GlanceInternal, port]}

  role_data:
    description: Role data for the HAproxy role for DCN/Edge.
    value:
      map_merge:
        - get_attr: [HAProxyBase, role_data]
        - service_name: haproxy_edge
          ansible_group_vars:
            map_merge:
              - get_attr: [HAProxyBase, role_data, ansible_group_vars]
              - tripleo_firewall_edge_frontend_enabled: true
          config_settings:
            map_merge:
              - get_attr: [HAProxyBase, role_data, config_settings]
              - tripleo::haproxy::public_virtual_ip: null
                tripleo::haproxy::aodh: false
                tripleo::haproxy::barbican: false
                tripleo::haproxy::ceph_grafana: false
                tripleo::haproxy::ceph_rgw: false
                tripleo::haproxy::cinder: false
                tripleo::haproxy::designate: false
                tripleo::haproxy::docker_registry: false
                tripleo::haproxy::etcd: false
                tripleo::haproxy::glance_api: false
              - if:
                  - {get_param: EnableGlanceApiProxy}
                  - tripleo::haproxy::glance_api_internal: true
                    glance_api_vip:
                      str_replace:
                        template:
                          "%{lookup('NETWORK')}"
                        params:
                          NETWORK: {get_param: [ServiceNetMap, GlanceApiEdgeNetwork]}
                    glance_api_internal_node_ips: "%{alias('glance_api_edge_node_ips')}"
                    glance_api_internal_node_names: "%{alias('glance_api_edge_node_names')}"
                  - tripleo::haproxy::glance_api_internal: false
              - tripleo::haproxy::gnocchi: false
                tripleo::haproxy::heat_api: false
                tripleo::haproxy::heat_cfn: false
                tripleo::haproxy::horizon: false
                tripleo::haproxy::ironic: false
                tripleo::haproxy::ironic_inspector: false
                tripleo::haproxy::keystone_admin: false
                tripleo::haproxy::keystone_public: false
                tripleo::haproxy::manila: false
                tripleo::haproxy::metrics_qdr: false
                tripleo::haproxy::mysql: false
                tripleo::haproxy::neutron: false
                tripleo::haproxy::nova_osapi: false
                tripleo::haproxy::nova_metadata: false
                tripleo::haproxy::nova_novncproxy: false
                tripleo::haproxy::octavia: false
                tripleo::haproxy::ovn_dbs: false
                tripleo::haproxy::placement: false
                tripleo::haproxy::rabbitmq: false
                tripleo::haproxy::redis: false
                tripleo::haproxy::swift_proxy_server: false
          service_config_settings:
            map_merge:
              - get_attr: [HAProxyBase, role_data, service_config_settings]
              - if:
                  - {get_param: EnableGlanceApiProxy}
                  - cinder_volume:
                      cinder::glance::glance_api_servers: *glance_api_edge_uri
                    nova_compute:
                      nova::glance::endpoint_override: *glance_api_edge_uri
