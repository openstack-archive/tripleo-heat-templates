heat_template_version: wallaby

description: >
  Ceph Monitor service.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  CephValidationRetries:
    type: number
    default: 40
    description: Number of retry attempts for Ceph validation
  CephValidationDelay:
    type: number
    default: 30
    description: Interval (in seconds) in between validation checks
  CephEnableDashboard:
    type: boolean
    default: false
    description: Parameter used to trigger the dashboard deployment.

conditions:
  dashboard_enabled: {equals: [{get_param: CephEnableDashboard}, true]}

resources:
  CephBase:
    type: ./ceph-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Ceph Monitor service.
    value:
      service_name: ceph_mon
      firewall_rules:
        '110 ceph_mon':
          dport:
            list_concat:
              - - 6789
              - - 3300
              - if:
                - dashboard_enabled
                - - '9100'
      service_config_settings:
        collectd:
          tripleo.collectd.plugins.ceph_osd:
            - ceph
          collectd::plugin::ceph::daemons: []
      upgrade_tasks: {get_attr: [CephBase, role_data, upgrade_tasks]}
      puppet_config: {}
      docker_config: {}
      external_deploy_tasks: []
