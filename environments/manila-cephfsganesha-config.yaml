# A Heat environment file which can be used to enable a
# Manila CephFS-NFS driver backend.
resource_registry:
  OS::TripleO::Services::ManilaApi: ../deployment/manila/manila-api-container-puppet.yaml
  OS::TripleO::Services::ManilaScheduler: ../deployment/manila/manila-scheduler-container-puppet.yaml
  # Only manila-share is pacemaker managed:
  OS::TripleO::Services::ManilaShare: ../deployment/manila/manila-share-pacemaker-puppet.yaml
  OS::TripleO::Services::ManilaBackendCephFs: ../deployment/manila/manila-backend-cephfs.yaml
  # ceph-nfs (ganesha) service is installed and configured by tripleo-ansible
  # but it's still managed by pacemaker
  OS::TripleO::Services::CephNfs: ../deployment/cephadm/ceph-nfs.yaml


parameter_defaults:
  ManilaCephFSBackendName: cephfs
  ManilaCephFSDriverHandlesShareServers: false
  ManilaCephFSCephFSEnableSnapshots: false
  ManilaCephFSCephVolumeMode: '0755'
  # manila cephfs driver supports either native cephfs backend - 'CEPHFS'
  # (users mount shares directly from ceph cluster), or nfs-ganesha backend -
  # 'NFS' (users mount shares through nfs-ganesha server)
  ManilaCephFSCephFSProtocolHelperType: 'NFS'
  # Use ManilaCephFSNFSIdmapConf to change the path of the idmap.conf file consumed by ganesha
  ManilaCephFSNFSIdmapConf: '/etc/ganesha/idmap.conf'
  # Use ManilaCephFSNFSIdmapOverrides to overide ini configuration in the idmap.conf file
  ManilaCephFSNFSIdmapOverrides: {}
  # Uncomment the following and set them appropriately if the Ceph cluster is
  # external and you need to use a specific keyring/key and pool to access the
  # CephFS share
  #ManilaCephFSDataPoolName: manila_data
  #ManilaCephFSMetadataPoolName: manila_metadata
  #ManilaCephFSCephFSAuthId: 'manila'
  #CephManilaClientKey: 'AQDLOh1VgEp6FRAAFzT7Zw+Y9V6JJExQAsRnRQ=='
