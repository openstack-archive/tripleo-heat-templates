# Copyright (c) 2017 Pure Storage Inc, or its subsidiaries.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
heat_template_version: wallaby

description: >
  Openstack Cinder Pure Storage FlashArray backend

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry. Use
                 parameter_merge_strategies to merge it with the defaults.
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    type: json
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
  CinderEnablePureBackend:
    type: boolean
    default: true
  CinderPureBackendName:
    type: comma_delimited_list
    default: 'tripleo_pure'
    description: A list of Cinder Pure Storage backend names.
  CinderPureMultiConfig:
    type: json
    default: {}
    description: >
      Dictionary of settings when configuring multiple Pure backends. The
      hash key is the backend name, and the value is a dictionary of parameter
      values unique to that backend.
  CinderPureAvailabilityZone:
    default: ''
    description: >
      The availability zone of the Pure Storage Cinder backend.
      When set, it overrides the default CinderStorageAvailabilityZone.
    type: string
  CinderPureStorageProtocol:
    type: string
    default: 'iSCSI'
    constraints:
      - allowed_values: ['iSCSI', 'FC']
  CinderPureSanIp:
    type: string
  CinderPureAPIToken:
    type: string
  CinderPureUseChap:
    type: boolean
    default: false
  CinderPureMultipathXfer:
    type: boolean
    default: true
  CinderPureImageCache:
    type: boolean
    default: true
  CinderPureHostPersonality:
    type: string
    default: ''
    constraints:
      - allowed_values: ['aix', 'esxi', 'hitachi-vsp', 'hpux',
                         'oracle-vm-server', 'solaris', 'vms', '']
    description: Determines how the Purity system tunes the protocol
                 used between the array and the initiator.
                 A blank string will default to no Host Pesonality.
  CinderPureIscsiCidr:
    type: string
    default: '0.0.0.0/0'
    description: CIDR of FlashArray iSCSI targets hosts are allowed
                 to connect to. Default is any valid IPv4 address.
  CinderPureEradicateOnDelete:
    type: boolean
    default: false
    description: When enabled, all Pure volumes, snapshots, and
                 protection groups will be eradicated at the time of
                 deletion in Cinder. Data will NOT be recoverable after
                 a delete with this set to True! When disabled, volumes
                 and snapshots will go into pending eradication state.
                 and can be recovered.

outputs:
  role_data:
    description: Role data for the Cinder Pure Storage FlashArray backend.
    value:
      service_name: cinder_backend_pure
      config_settings:
        map_merge:
          - tripleo::profile::base::cinder::volume::cinder_enable_pure_backend: {get_param: CinderEnablePureBackend}
            cinder::backend::pure::volume_backend_name: {get_param: CinderPureBackendName}
            cinder::backend::pure::volume_multi_config: {get_param: CinderPureMultiConfig}
            cinder::backend::pure::pure_storage_protocol: {get_param: CinderPureStorageProtocol}
            cinder::backend::pure::san_ip: {get_param: CinderPureSanIp}
            cinder::backend::pure::pure_api_token: {get_param: CinderPureAPIToken}
            cinder::backend::pure::use_chap_auth: {get_param: CinderPureUseChap}
            cinder::backend::pure::use_multipath_for_image_xfer: {get_param: CinderPureMultipathXfer}
            cinder::backend::pure::image_volume_cache_enabled : {get_param: CinderPureImageCache}
            cinder::backend::pure::pure_eradicate_on_delete : {get_param: CinderPureEradicateOnDelete}
            cinder::backend::pure::pure_iscsi_cidr : {get_param: CinderPureIscsiCidr}
          - if:
            - not: {equals : [{get_param: CinderPureAvailabilityZone}, '']}
            - cinder::backend::pure::backend_availability_zone: {get_param: CinderPureAvailabilityZone}
          - if:
            - not: {equals : [{get_param: CinderPureHostPersonality}, '']}
            - cinder::backend::pure::pure_host_personality: {get_param: CinderPureHostPersonality}
