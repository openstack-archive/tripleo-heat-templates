heat_template_version: wallaby

description: >
  OpenStack containerized Multipathd service

parameters:
  ContainerMultipathdImage:
    description: image
    type: string
    tags:
      - role_specific
  ContainerMultipathdConfigImage:
    description: The container image to use for the multipathd config_volume
    type: string
    tags:
      - role_specific
  MultipathdEnable:
    default: false
    description: Whether to enable the multipath daemon
    type: boolean
  MultipathdEnableUserFriendlyNames:
    default: false
    description: Whether to enable assigning a user friendly name to each path
    type: boolean
  MultipathdEnableFindMultipaths:
    default: true
    description: Whether to automatically create a multipath device for each path
    type: boolean
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry. Use
                 parameter_merge_strategies to merge it with the defaults.
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

conditions:

  multipathd_enabled: {equals: [{get_param: MultipathdEnable}, true]}
  user_friendly_names_enabled: {equals: [{get_param: MultipathdEnableUserFriendlyNames}, true]}
  find_multipaths_enabled: {equals: [{get_param: MultipathdEnableFindMultipaths}, true]}

resources:

  ContainersCommon:
    type: ../containers-common.yaml

  RoleParametersValue:
    type: OS::Heat::Value
    properties:
      type: json
      value:
        map_replace:
          - map_replace:
            - ContainerMultipathdImage: ContainerMultipathdImage
              ContainerMultipathdConfigImage: ContainerMultipathdConfigImage
            - values: {get_param: [RoleParameters]}
          - values:
              ContainerMultipathdImage: {get_param: ContainerMultipathdImage}
              ContainerMultipathdConfigImage: {get_param: ContainerMultipathdConfigImage}

outputs:
  role_data:
    description: Role data for the Multipathd API role.
    value:
      service_name: multipathd
      config_settings: {}
      service_config_settings: {}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: multipathd
        puppet_tags: exec
        step_config:
          str_replace:
            template: |
              exec { "update multipath.conf":
                command => "/usr/sbin/mpathconf CMD --with_multipathd n --user_friendly_names UFN --find_multipaths FM"
              }
            params:
              CMD:
                if:
                  - multipathd_enabled
                  - '--enable'
                  - '--disable'
              UFN:
                if:
                  - user_friendly_names_enabled
                  - 'y'
                  - 'n'
              FM:
                if:
                  - find_multipaths_enabled
                  - 'y'
                  - 'n'
        config_image: {get_attr: [RoleParametersValue, value, ContainerMultipathdConfigImage]}
        volumes:
          - /etc/multipath.conf:/etc/multipath.conf:z
      kolla_config:
        /var/lib/kolla/config_files/multipathd.json:
          command: /usr/sbin/multipathd -d
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
            - source: "/var/lib/kolla/config_files/src-iscsid/*"
              dest: "/etc/iscsi/"
              merge: true
              preserve_properties: true
      docker_config:
        step_3:
          multipathd:
            start_order: 1
            image: {get_attr: [RoleParametersValue, value, ContainerMultipathdImage]}
            net: host
            privileged: true
            restart: always
            healthcheck:
              test: /openstack/healthcheck
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/multipathd.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/multipathd:/var/lib/kolla/config_files/src:ro
                  - /etc/iscsi:/var/lib/kolla/config_files/src-iscsid:ro
                  - /dev:/dev
                  - /run:/run
                  - /sys:/sys
                  - /lib/modules:/lib/modules:ro
                  - /var/lib/iscsi:/var/lib/iscsi:z
                  - /etc/multipath:/etc/multipath:z
            environment:
              KOLLA_CONFIG_STRATEGY: COPY_ALWAYS
      host_prep_tasks:
        - name: Check if multipathd is deployed on the host
          command: systemctl is-enabled --quiet multipathd
          failed_when: false
          register: multipathd_enabled_result
        - name: Set fact multipathd_enabled
          set_fact:
            multipathd_enabled: "{{ multipathd_enabled_result.rc == 0 }}"
        - name: Stop multipathd on the host
          service: name=multipathd state=stopped enabled=no
          when: multipathd_enabled|bool
        - name: load dm-multipath
          import_role:
            name: tripleo_module_load
          vars:
            modules:
              - name: dm-multipath
        - name: prepare /etc/multipath
          file:
            path: /etc/multipath
            state: directory
            setype: container_file_t
        - name: ensure /etc/multipath.conf exists
          file:
            path: /etc/multipath.conf
            state: touch
            setype: container_file_t
      upgrade_tasks: []
